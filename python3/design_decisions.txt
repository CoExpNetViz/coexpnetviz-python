Frequently queried data
=======================
Data can be stored locally in a file, locally in a database or remotely. We chose to use a local sqlite for frequently accessed data that isn't entirely trivial to bundle together in a bulk request.

Odds are, the local file is already cached by the kernel if it's used frequently. A local database has the advantage of loading only what's needed from a file, which is an excellent property when needing only a little bit of info from a 1.4GB file. By keeping things local, the round trip time for a request is minimal.

With remote data, frequent requests (of small data) must be bundled together or performance will cripple due to network round trip time. One could perhaps use a sort of Future object to introduce laziness in the retrieved values so that the requests can be buffered until the requested data is actually used. However, this is more difficult to program and maintain.

A local database can be set up with hardly any penalty to ease of use by using sqlite. It is unsure whether e.g. MySQL would fare much better in terms of performance, I doubt it, but I haven't tested.  